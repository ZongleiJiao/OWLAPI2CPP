/* Generated By:JavaCC: Do not edit this line. DLSyntaxParserConstants.java */
package uk.ac.manchester.cs.owlapi.dlsyntax.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DLSyntaxParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SUBCLASSOF = 4;
  /** RegularExpression Id. */
  int EQUIVALENTTO = 5;
  /** RegularExpression Id. */
  int NEQ = 6;
  /** RegularExpression Id. */
  int COMPOSE = 7;
  /** RegularExpression Id. */
  int DOT = 8;
  /** RegularExpression Id. */
  int INVERSE = 9;
  /** RegularExpression Id. */
  int OPENPAR = 10;
  /** RegularExpression Id. */
  int CLOSEPAR = 11;
  /** RegularExpression Id. */
  int OPENSQPAR = 12;
  /** RegularExpression Id. */
  int CLOSESQPAR = 13;
  /** RegularExpression Id. */
  int OPENBRACE = 14;
  /** RegularExpression Id. */
  int CLOSEBRACE = 15;
  /** RegularExpression Id. */
  int COLON = 16;
  /** RegularExpression Id. */
  int AND = 17;
  /** RegularExpression Id. */
  int OR = 18;
  /** RegularExpression Id. */
  int NOT = 19;
  /** RegularExpression Id. */
  int SOME = 20;
  /** RegularExpression Id. */
  int ALL = 21;
  /** RegularExpression Id. */
  int MIN = 22;
  /** RegularExpression Id. */
  int MAX = 23;
  /** RegularExpression Id. */
  int EXACT = 24;
  /** RegularExpression Id. */
  int IN = 25;
  /** RegularExpression Id. */
  int TRANSITIVEROLES = 26;
  /** RegularExpression Id. */
  int INT = 27;
  /** RegularExpression Id. */
  int DOUBLE = 28;
  /** RegularExpression Id. */
  int ID = 29;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "<SUBCLASSOF>",
    "<EQUIVALENTTO>",
    "<NEQ>",
    "<COMPOSE>",
    "\".\"",
    "<INVERSE>",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "<AND>",
    "<OR>",
    "<NOT>",
    "<SOME>",
    "<ALL>",
    "<MIN>",
    "<MAX>",
    "<EXACT>",
    "<IN>",
    "<TRANSITIVEROLES>",
    "<INT>",
    "<DOUBLE>",
    "<ID>",
    "\"\\n\"",
    "\",\"",
  };

}
